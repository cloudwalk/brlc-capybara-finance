{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xe7c9641464353F93444ddBdbB2A0d41810459243",
      "txHash": "0x5c0ad895e02e7168696bb8ae057946e426965f5684351bbe0ad0fe8b7d84dfe0",
      "kind": "uups"
    },
    {
      "address": "0xB0BEC4218b94eEf2CB8391B3ACEc4fAbE5f54Cff",
      "txHash": "0xe59826381151d20df4de5d9ea210fd5efb88cd64f53cb784210548dcbcb01c2a",
      "kind": "uups"
    },
    {
      "address": "0x8d0d62dD82A9C728Bf8A9a7450A9283C7984042c",
      "txHash": "0x2c0bc8362f6703c7046924deb0323d55510b0f7c78881882e825ad0ad9993e5b",
      "kind": "uups"
    }
  ],
  "impls": {
    "d8da26ce853ec83ac4c648fe433fe00dc82dac18bd6b7a2c61620c4a9b70b8b9": {
      "address": "0x9781907e4A9D9a2BB7A21f29c9544BeF77315F4b",
      "txHash": "0xe6debaa461da165fa9a60ef3630d931feccd804b5e66b57b9e1efb5391bc52f3",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_registry",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LendingMarketStorage",
            "src": "src\\LendingMarketStorage.sol:16"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "LendingMarketStorage",
            "src": "src\\LendingMarketStorage.sol:19"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(State)8757_storage)",
            "contract": "LendingMarketStorage",
            "src": "src\\LendingMarketStorage.sol:22"
          },
          {
            "label": "_creditLines",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LendingMarketStorage",
            "src": "src\\LendingMarketStorage.sol:25"
          },
          {
            "label": "_liquidityPools",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LendingMarketStorage",
            "src": "src\\LendingMarketStorage.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)45_storage",
            "contract": "LendingMarketStorage",
            "src": "src\\LendingMarketStorage.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)361_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)216_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)440_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_enum(Formula)8601": {
            "label": "enum Interest.Formula",
            "members": [
              "Simple",
              "Compound"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(State)8757_storage)": {
            "label": "mapping(uint256 => struct Loan.State)",
            "numberOfBytes": "32"
          },
          "t_struct(State)8757_storage": {
            "label": "struct Loan.State",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "interestRatePrimary",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "interestRateSecondary",
                "type": "t_uint32",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "interestRateFactor",
                "type": "t_uint32",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startDate",
                "type": "t_uint32",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "initialBorrowAmount",
                "type": "t_uint64",
                "offset": 24,
                "slot": "1"
              },
              {
                "label": "periodInSeconds",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "durationInPeriods",
                "type": "t_uint32",
                "offset": 4,
                "slot": "2"
              },
              {
                "label": "trackedBorrowAmount",
                "type": "t_uint64",
                "offset": 8,
                "slot": "2"
              },
              {
                "label": "trackDate",
                "type": "t_uint32",
                "offset": 16,
                "slot": "2"
              },
              {
                "label": "freezeDate",
                "type": "t_uint32",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "autoRepayment",
                "type": "t_bool",
                "offset": 24,
                "slot": "2"
              },
              {
                "label": "interestFormula",
                "type": "t_enum(Formula)8601",
                "offset": 25,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5cfab3e66c84e1303b4c47296c4d2525e7d900e97a4bd4e598cdbaa180396c90": {
      "address": "0xF3bb13E3FdBfE091d4bB3AB4e178Abf8e2D56FC9",
      "txHash": "0xc563219286b24c592eb1af96f2812e02c738a8d93144dfab6f4e03a19141b175",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_market",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LiquidityPoolAccountable",
            "src": "src\\pools\\LiquidityPoolAccountable.sol:34"
          },
          {
            "label": "_admins",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LiquidityPoolAccountable",
            "src": "src\\pools\\LiquidityPoolAccountable.sol:37"
          },
          {
            "label": "_creditLines",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "LiquidityPoolAccountable",
            "src": "src\\pools\\LiquidityPoolAccountable.sol:40"
          },
          {
            "label": "_creditLineBalances",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityPoolAccountable",
            "src": "src\\pools\\LiquidityPoolAccountable.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)440_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "83edc309afb7856db5c6d949249319aed496d7fa3fdf9f2dfbcd410aa3411780": {
      "address": "0x0831596BdB50846fc2DD571a7B96C581eA3A8EAf",
      "txHash": "0x1b790d8af251aa09e3de211f203d5433f9db278726772e95e8850ea5ce1d241f",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_market",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:25"
          },
          {
            "label": "_token",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:28"
          },
          {
            "label": "_config",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(CreditLineConfig)7925_storage",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:31"
          },
          {
            "label": "_admins",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:34"
          },
          {
            "label": "_borrowers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(BorrowerConfig)7959_storage)",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)440_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(BorrowPolicy)7887": {
            "label": "enum ICreditLineConfigurable.BorrowPolicy",
            "members": [
              "Reset",
              "Decrease",
              "Keep"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Formula)8601": {
            "label": "enum Interest.Formula",
            "members": [
              "Simple",
              "Compound"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(BorrowerConfig)7959_storage)": {
            "label": "mapping(address => struct ICreditLineConfigurable.BorrowerConfig)",
            "numberOfBytes": "32"
          },
          "t_struct(BorrowerConfig)7959_storage": {
            "label": "struct ICreditLineConfigurable.BorrowerConfig",
            "members": [
              {
                "label": "durationInPeriods",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "interestRatePrimary",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "interestRateSecondary",
                "type": "t_uint32",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "addonRecipient",
                "type": "t_address",
                "offset": 12,
                "slot": "0"
              },
              {
                "label": "expiration",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minBorrowAmount",
                "type": "t_uint64",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "maxBorrowAmount",
                "type": "t_uint64",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "interestFormula",
                "type": "t_enum(Formula)8601",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "borrowPolicy",
                "type": "t_enum(BorrowPolicy)7887",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "autoRepayment",
                "type": "t_bool",
                "offset": 22,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(CreditLineConfig)7925_storage": {
            "label": "struct ICreditLineConfigurable.CreditLineConfig",
            "members": [
              {
                "label": "periodInSeconds",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "interestRateFactor",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "minInterestRatePrimary",
                "type": "t_uint32",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "maxInterestRatePrimary",
                "type": "t_uint32",
                "offset": 12,
                "slot": "0"
              },
              {
                "label": "minInterestRateSecondary",
                "type": "t_uint32",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "maxInterestRateSecondary",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "addonPeriodCostRate",
                "type": "t_uint32",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "addonFixedCostRate",
                "type": "t_uint32",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "minDurationInPeriods",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxDurationInPeriods",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "minBorrowAmount",
                "type": "t_uint64",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "maxBorrowAmount",
                "type": "t_uint64",
                "offset": 16,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
