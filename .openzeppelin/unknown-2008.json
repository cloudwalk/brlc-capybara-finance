{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xfF0C47F12647947bd1552722B97d97A273B8b1bA",
      "txHash": "0x9aeb01b16de21415dd524b1e73f1531760898d0fc832e0548d4f2d67995ec9b8",
      "kind": "uups"
    },
    {
      "address": "0x0dD80f8B38163fe2Ed865accfF0A2ACAd9E1dFE2",
      "txHash": "0x6f2c9d1e49192539b232a0858c11dda0d1e327ae4a92d24696478dbb3e83eb92",
      "kind": "uups"
    },
    {
      "address": "0x4fB172B6Dad1eB1645637c1eF99884220749B0dC",
      "txHash": "0x3a7c0d15374ea517dfc4777baf60be8ab943dcb2a0df43bca079a00cec3b198a",
      "kind": "uups"
    }
  ],
  "impls": {
    "c951f4892f052288b424330f0e8ad16a974b66bf5c43da35118f74293eed7961": {
      "address": "0x7c62Aebd62Aee0f99f9bdd1BD75c9A661328a3AA",
      "txHash": "0x1cf895d637d714aa89d59d743e33aa8cfe354790fe54c7e69085084cb5c19352",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_registry",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LendingMarketStorage",
            "src": "src\\LendingMarketStorage.sol:16"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "LendingMarketStorage",
            "src": "src\\LendingMarketStorage.sol:19"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(State)9021_storage)",
            "contract": "LendingMarketStorage",
            "src": "src\\LendingMarketStorage.sol:22"
          },
          {
            "label": "_creditLineLenders",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LendingMarketStorage",
            "src": "src\\LendingMarketStorage.sol:25"
          },
          {
            "label": "_liquidityPoolLenders",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LendingMarketStorage",
            "src": "src\\LendingMarketStorage.sol:28"
          },
          {
            "label": "_liquidityPoolByCreditLine",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LendingMarketStorage",
            "src": "src\\LendingMarketStorage.sol:31"
          },
          {
            "label": "_hasAlias",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "LendingMarketStorage",
            "src": "src\\LendingMarketStorage.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_uint256)44_storage",
            "contract": "LendingMarketStorage",
            "src": "src\\LendingMarketStorage.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)361_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)216_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)442_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_enum(Formula)8918": {
            "label": "enum Interest.Formula",
            "members": [
              "Simple",
              "Compound"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(State)9021_storage)": {
            "label": "mapping(uint256 => struct Loan.State)",
            "numberOfBytes": "32"
          },
          "t_struct(State)9021_storage": {
            "label": "struct Loan.State",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "interestRateFactor",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "interestRatePrimary",
                "type": "t_uint32",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "interestRateSecondary",
                "type": "t_uint32",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "initialBorrowAmount",
                "type": "t_uint64",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "startDate",
                "type": "t_uint32",
                "offset": 28,
                "slot": "1"
              },
              {
                "label": "holder",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "periodInSeconds",
                "type": "t_uint32",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "durationInPeriods",
                "type": "t_uint32",
                "offset": 24,
                "slot": "2"
              },
              {
                "label": "interestFormula",
                "type": "t_enum(Formula)8918",
                "offset": 28,
                "slot": "2"
              },
              {
                "label": "autoRepayment",
                "type": "t_bool",
                "offset": 29,
                "slot": "2"
              },
              {
                "label": "trackedBorrowAmount",
                "type": "t_uint64",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "trackedDate",
                "type": "t_uint32",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "freezeDate",
                "type": "t_uint32",
                "offset": 12,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a56dd6d66ce3caf4873466a861a772e7113c591687b8d796dbeb6908773a6190": {
      "address": "0x14Ef947D45a7946F1494bfc0B957b39C93B8E6CA",
      "txHash": "0xcc2c1fd651566f7227383fafed17ff4871b8e3942814f1c29d22c9922317373e",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_market",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LiquidityPoolAccountable",
            "src": "src\\pools\\LiquidityPoolAccountable.sol:34"
          },
          {
            "label": "_admins",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LiquidityPoolAccountable",
            "src": "src\\pools\\LiquidityPoolAccountable.sol:37"
          },
          {
            "label": "_creditLines",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "LiquidityPoolAccountable",
            "src": "src\\pools\\LiquidityPoolAccountable.sol:40"
          },
          {
            "label": "_creditLineBalances",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityPoolAccountable",
            "src": "src\\pools\\LiquidityPoolAccountable.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)442_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "dac28a834882965c9782c3a511e342161def8ca8bfea4d77fe22d9537ce16cb3": {
      "address": "0x23A39B1040B4c0ED50DF8aBf9d9725096356c97B",
      "txHash": "0x382b95f3e62933228bc96bab8b7e373243f22743b3f3a1ad15be5b2562158502",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_market",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:25"
          },
          {
            "label": "_token",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:28"
          },
          {
            "label": "_admins",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:31"
          },
          {
            "label": "_borrowers",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(BorrowerConfig)8226_storage)",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:34"
          },
          {
            "label": "_config",
            "offset": 0,
            "slot": "4",
            "type": "t_struct(CreditLineConfig)8200_storage",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)442_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(BorrowPolicy)8176": {
            "label": "enum ICreditLineConfigurable.BorrowPolicy",
            "members": [
              "Reset",
              "Decrease",
              "Keep"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Formula)8918": {
            "label": "enum Interest.Formula",
            "members": [
              "Simple",
              "Compound"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(BorrowerConfig)8226_storage)": {
            "label": "mapping(address => struct ICreditLineConfigurable.BorrowerConfig)",
            "numberOfBytes": "32"
          },
          "t_struct(BorrowerConfig)8226_storage": {
            "label": "struct ICreditLineConfigurable.BorrowerConfig",
            "members": [
              {
                "label": "expiration",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "durationInPeriods",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "interestRatePrimary",
                "type": "t_uint32",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "interestRateSecondary",
                "type": "t_uint32",
                "offset": 12,
                "slot": "0"
              },
              {
                "label": "minBorrowAmount",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "maxBorrowAmount",
                "type": "t_uint64",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "addonFixedCostRate",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "addonPeriodCostRate",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "interestFormula",
                "type": "t_enum(Formula)8918",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "borrowPolicy",
                "type": "t_enum(BorrowPolicy)8176",
                "offset": 9,
                "slot": "1"
              },
              {
                "label": "autoRepayment",
                "type": "t_bool",
                "offset": 10,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(CreditLineConfig)8200_storage": {
            "label": "struct ICreditLineConfigurable.CreditLineConfig",
            "members": [
              {
                "label": "addonRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "periodInSeconds",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "minDurationInPeriods",
                "type": "t_uint32",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "maxDurationInPeriods",
                "type": "t_uint32",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "minBorrowAmount",
                "type": "t_uint64",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxBorrowAmount",
                "type": "t_uint64",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "minInterestRatePrimary",
                "type": "t_uint32",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "maxInterestRatePrimary",
                "type": "t_uint32",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "minInterestRateSecondary",
                "type": "t_uint32",
                "offset": 24,
                "slot": "1"
              },
              {
                "label": "maxInterestRateSecondary",
                "type": "t_uint32",
                "offset": 28,
                "slot": "1"
              },
              {
                "label": "interestRateFactor",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5f2ca1b2cbc360d5d245fb67f68c98c2b29ac6109c8448e2bec027c24a27bc12": {
      "address": "0xD58d224D77616D04B5dc8c11d4876c4EEDb2D9ac",
      "txHash": "0xeb8ea7c76ed05a5b4de3bce56c2c27849a566fee8437d62d5150d53845413913",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_market",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:25"
          },
          {
            "label": "_token",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:28"
          },
          {
            "label": "_admins",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:31"
          },
          {
            "label": "_borrowers",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(BorrowerConfig)1625_storage)",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:34"
          },
          {
            "label": "_config",
            "offset": 0,
            "slot": "4",
            "type": "t_struct(CreditLineConfig)1599_storage",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(BorrowPolicy)1573": {
            "label": "enum ICreditLineConfigurable.BorrowPolicy",
            "members": [
              "Reset",
              "Decrease",
              "Keep"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Formula)1808": {
            "label": "enum Interest.Formula",
            "members": [
              "Simple",
              "Compound"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(BorrowerConfig)1625_storage)": {
            "label": "mapping(address => struct ICreditLineConfigurable.BorrowerConfig)",
            "numberOfBytes": "32"
          },
          "t_struct(BorrowerConfig)1625_storage": {
            "label": "struct ICreditLineConfigurable.BorrowerConfig",
            "members": [
              {
                "label": "expiration",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "durationInPeriods",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "interestRatePrimary",
                "type": "t_uint32",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "interestRateSecondary",
                "type": "t_uint32",
                "offset": 12,
                "slot": "0"
              },
              {
                "label": "minBorrowAmount",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "maxBorrowAmount",
                "type": "t_uint64",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "addonFixedCostRate",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "addonPeriodCostRate",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "interestFormula",
                "type": "t_enum(Formula)1808",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "borrowPolicy",
                "type": "t_enum(BorrowPolicy)1573",
                "offset": 9,
                "slot": "1"
              },
              {
                "label": "autoRepayment",
                "type": "t_bool",
                "offset": 10,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(CreditLineConfig)1599_storage": {
            "label": "struct ICreditLineConfigurable.CreditLineConfig",
            "members": [
              {
                "label": "holder",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "periodInSeconds",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "minDurationInPeriods",
                "type": "t_uint32",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "maxDurationInPeriods",
                "type": "t_uint32",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "minBorrowAmount",
                "type": "t_uint64",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxBorrowAmount",
                "type": "t_uint64",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "minInterestRatePrimary",
                "type": "t_uint32",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "maxInterestRatePrimary",
                "type": "t_uint32",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "minInterestRateSecondary",
                "type": "t_uint32",
                "offset": 24,
                "slot": "1"
              },
              {
                "label": "maxInterestRateSecondary",
                "type": "t_uint32",
                "offset": 28,
                "slot": "1"
              },
              {
                "label": "interestRateFactor",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "addonRecipient",
                "type": "t_address",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "581d58fa3bf03422c86199b1aedbcd37d852c2e7b427e963c825538c6c8a63f7": {
      "address": "0x7cA4d3CB04aB812C348A5f3b3d2CE96275D78b2f",
      "txHash": "0xb868c4b3b9f9005935512ebc28fa14d6ea780103f57c5e337e050472ffbb03f7",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_market",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:25"
          },
          {
            "label": "_token",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:28"
          },
          {
            "label": "_admins",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:31"
          },
          {
            "label": "_borrowers",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(BorrowerConfig)1625_storage)",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:34"
          },
          {
            "label": "_config",
            "offset": 0,
            "slot": "4",
            "type": "t_struct(CreditLineConfig)1599_storage",
            "contract": "CreditLineConfigurable",
            "src": "src\\lines\\CreditLineConfigurable.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_enum(BorrowPolicy)1573": {
            "label": "enum ICreditLineConfigurable.BorrowPolicy",
            "members": [
              "Reset",
              "Decrease",
              "Keep"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Formula)1808": {
            "label": "enum Interest.Formula",
            "members": [
              "Simple",
              "Compound"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(BorrowerConfig)1625_storage)": {
            "label": "mapping(address => struct ICreditLineConfigurable.BorrowerConfig)",
            "numberOfBytes": "32"
          },
          "t_struct(BorrowerConfig)1625_storage": {
            "label": "struct ICreditLineConfigurable.BorrowerConfig",
            "members": [
              {
                "label": "expiration",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "durationInPeriods",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "interestRatePrimary",
                "type": "t_uint32",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "interestRateSecondary",
                "type": "t_uint32",
                "offset": 12,
                "slot": "0"
              },
              {
                "label": "minBorrowAmount",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "maxBorrowAmount",
                "type": "t_uint64",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "addonFixedCostRate",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "addonPeriodCostRate",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "interestFormula",
                "type": "t_enum(Formula)1808",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "borrowPolicy",
                "type": "t_enum(BorrowPolicy)1573",
                "offset": 9,
                "slot": "1"
              },
              {
                "label": "autoRepayment",
                "type": "t_bool",
                "offset": 10,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(CreditLineConfig)1599_storage": {
            "label": "struct ICreditLineConfigurable.CreditLineConfig",
            "members": [
              {
                "label": "holder",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "periodInSeconds",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "minDurationInPeriods",
                "type": "t_uint32",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "maxDurationInPeriods",
                "type": "t_uint32",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "minBorrowAmount",
                "type": "t_uint64",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxBorrowAmount",
                "type": "t_uint64",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "minInterestRatePrimary",
                "type": "t_uint32",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "maxInterestRatePrimary",
                "type": "t_uint32",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "minInterestRateSecondary",
                "type": "t_uint32",
                "offset": 24,
                "slot": "1"
              },
              {
                "label": "maxInterestRateSecondary",
                "type": "t_uint32",
                "offset": 28,
                "slot": "1"
              },
              {
                "label": "interestRateFactor",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "addonRecipient",
                "type": "t_address",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
